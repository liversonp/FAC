#Comando para rodar:
#spim -f nome.spim

.data
    cbn: .asciiz "\n"
    frase: .asciiz "bit-paridade: "
    saida: .asciiz "saida: "
    errado: .asciiz "entrada incorreta"

.text
main:
    li $v0, 5           #lendo o inteiro
    syscall
    move $t0, $v0
    addi $t2, $zero, 128 
    slt $t1, $t0, $zero     #Vendo se é menor que 0
    bne $t1, $zero, adeus

    slt $t1, $t0, $t2   #olhando se t0 é menor que 128
    beq $t1, $zero, adeus

    move $s0, $t0

    fazasparada:
    addi $t1, $zero, 1  #utilizando o auxiliar do and
    addi $t2, $zero, 7  #quantidade total de iterações
    addi $t3, $zero, 0  #contador de iterações
    add $t8, $zero, $zero
    addi $t7, $zero, 2

    loop:
        and $t4, $t0, $t1
        srl $t0, $t0, 1
        add $t8, $t8, $t4

        defloop:
        addi $t3, $t3, 1
        slt $t5, $t3, $t2
        bne $t5, $zero, loop

    div $t8, $t8, $t7
    mfhi $t8

    li $v0, 4
    la $a0, frase
    syscall

    add $a0, $t8, $zero
    li $v0, 1
    syscall

    li $v0, 4
    la $a0, cbn
    syscall

    bne $t8, $zero, paridade
    j fim

    paridade:
        or $s0, $s0, 128
    
    fim:
    li $v0, 4
    la $a0, saida
    syscall
    move $a0, $s0
    li $v0, 1
    syscall

    li $v0, 4
    la $a0, cbn
    syscall

    li $v0, 10
    syscall


adeus:
    li $v0, 4
    la $a0, errado
    syscall

    li $v0, 4
    la $a0, cbn
    syscall

    li $v0, 10
    syscall